@model QuizFactory.Mvc.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 class="green text-shadow">Edit Question</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal gray">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.Answers.Count; i++)
        {
            <div class="form-group">
                <div class="col-md-offset-1 col-md-1 text-right">
                    @Html.RadioButton("correctAnswer", i.ToString(), new { @checked = Model.Answers[i].IsCorrect })
                </div>
                <div class="col-md-10">
                    <input type="text" value=@(Model.Answers[i].Text) name="answers[@i]" class="form-control"/>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-1 col-md-1 text-right">
                @Html.RadioButton("correctAnswer", Model.Answers.Count.ToString())
            </div>
            <div class="col-md-10">
                <input type="text" name="answers[@Model.Answers.Count]" class="form-control" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary box-shadow" />
        </div>
    </div>
}

<p>
    @Html.ActionLink("Back to Questions", "Index", new { quizId = @Model.QuizId })
</p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   
}
