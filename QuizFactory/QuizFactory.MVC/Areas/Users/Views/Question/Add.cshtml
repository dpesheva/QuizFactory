@model QuizFactory.Mvc.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "Add Question";
}

<h2 class="green text-shadow">Add Question</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal gray">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.RadioButton("answer", new { value = "1" })
           <input type="text" name="answers[0]" />
        </div>

        <div class="form-group">
            @Html.RadioButton("answer", new { value = "2" })
            <input type="text" name="answers[1]" />
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@if (TempData["quizId"] != null)
{
    <p>
        @Html.ActionLink("Back to List", "Index", new { quizId = TempData["quizId"] })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
